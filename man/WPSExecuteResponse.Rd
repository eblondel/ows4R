% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WPSExecuteResponse.R
\docType{class}
\name{WPSExecuteResponse}
\alias{WPSExecuteResponse}
\title{WPSExecuteResponse}
\format{
\code{\link{R6Class}} object.
}
\value{
Object of \code{\link{R6Class}} for modelling a WPS Execute response
}
\description{
WPSExecuteResponse

WPSExecuteResponse
}
\author{
Emmanuel Blondel <emmanuel.blondel1@gmail.com>
}
\keyword{ExecuteResponse}
\keyword{OGC}
\keyword{WPS}
\section{Super class}{
\code{\link[ows4R:OGCAbstractObject]{ows4R::OGCAbstractObject}} -> \code{WPSExecuteResponse}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{process}}{process}

\item{\code{status}}{status}

\item{\code{statusLocation}}{status location}

\item{\code{statusHistory}}{status history}

\item{\code{processOutputs}}{process outputs}

\item{\code{exception}}{exception}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WPSExecuteResponse-new}{\code{WPSExecuteResponse$new()}}
\item \href{#method-WPSExecuteResponse-getProcess}{\code{WPSExecuteResponse$getProcess()}}
\item \href{#method-WPSExecuteResponse-getStatus}{\code{WPSExecuteResponse$getStatus()}}
\item \href{#method-WPSExecuteResponse-getStatusLocation}{\code{WPSExecuteResponse$getStatusLocation()}}
\item \href{#method-WPSExecuteResponse-getStatusHistory}{\code{WPSExecuteResponse$getStatusHistory()}}
\item \href{#method-WPSExecuteResponse-getProcessOutputs}{\code{WPSExecuteResponse$getProcessOutputs()}}
\item \href{#method-WPSExecuteResponse-getException}{\code{WPSExecuteResponse$getException()}}
\item \href{#method-WPSExecuteResponse-decode}{\code{WPSExecuteResponse$decode()}}
\item \href{#method-WPSExecuteResponse-update}{\code{WPSExecuteResponse$update()}}
\item \href{#method-WPSExecuteResponse-clone}{\code{WPSExecuteResponse$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="ERROR"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-ERROR'><code>ows4R::OGCAbstractObject$ERROR()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="INFO"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-INFO'><code>ows4R::OGCAbstractObject$INFO()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="WARN"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-WARN'><code>ows4R::OGCAbstractObject$WARN()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="encode"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-encode'><code>ows4R::OGCAbstractObject$encode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClass"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getClass'><code>ows4R::OGCAbstractObject$getClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClassName"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getClassName'><code>ows4R::OGCAbstractObject$getClassName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getNamespaceDefinition"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getNamespaceDefinition'><code>ows4R::OGCAbstractObject$getNamespaceDefinition()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="isFieldInheritedFrom"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-isFieldInheritedFrom'><code>ows4R::OGCAbstractObject$isFieldInheritedFrom()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="logger"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-logger'><code>ows4R::OGCAbstractObject$logger()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="print"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-print'><code>ows4R::OGCAbstractObject$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-new}{}}}
\subsection{Method \code{new()}}{
Initializes a \link{WPSExecuteResponse}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$new(
  xml,
  capabilities,
  processDescription = NULL,
  logger = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{xml}}{object of class \link{XMLInternalNode-class} from \pkg{XML}}

\item{\code{capabilities}}{object of class \link{WPSCapabilities}}

\item{\code{processDescription}}{process description}

\item{\code{logger}}{logger}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getProcess"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getProcess}{}}}
\subsection{Method \code{getProcess()}}{
Get process
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getProcess()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an object of class \link{WPSProcess}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getStatus"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getStatus}{}}}
\subsection{Method \code{getStatus()}}{
Get status
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getStatus()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an object of class \link{WPSStatus}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getStatusLocation"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getStatusLocation}{}}}
\subsection{Method \code{getStatusLocation()}}{
Get status location
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getStatusLocation()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an object of class \code{character}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getStatusHistory"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getStatusHistory}{}}}
\subsection{Method \code{getStatusHistory()}}{
Get status history
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getStatusHistory()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an object of class \code{character}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getProcessOutputs"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getProcessOutputs}{}}}
\subsection{Method \code{getProcessOutputs()}}{
Get list of process outputs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getProcessOutputs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a \code{list} of outputs
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-getException"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-getException}{}}}
\subsection{Method \code{getException()}}{
Get exception
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$getException()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an object of class \link{WPSException}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-decode"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-decode}{}}}
\subsection{Method \code{decode()}}{
Decodes an object of class \link{WPSExecuteResponse} from XML
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$decode(xml, capabilities, processDescription, logger)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{xml}}{object of class \link{XMLInternalNode-class} from \pkg{XML}}

\item{\code{capabilities}}{object of class \link{WPSCapabilities}}

\item{\code{processDescription}}{process description}

\item{\code{logger}}{logger}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-update"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-update}{}}}
\subsection{Method \code{update()}}{
Updates status history
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$update(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{verbose. Default is \code{FALSE}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WPSExecuteResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WPSExecuteResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WPSExecuteResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
