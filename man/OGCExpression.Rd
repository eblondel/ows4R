% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OGCExpression.R
\docType{class}
\name{OGCExpression}
\alias{OGCExpression}
\title{OGCExpression}
\format{
\code{\link{R6Class}} object.
}
\value{
Object of \code{\link{R6Class}} for modelling an OGC Expression
}
\description{
OGCExpression

OGCExpression
}
\note{
abstract class
}
\author{
Emmanuel Blondel <emmanuel.blondel1@gmail.com>
}
\keyword{Expression}
\keyword{OGC}
\section{Super class}{
\code{\link[ows4R:OGCAbstractObject]{ows4R::OGCAbstractObject}} -> \code{OGCExpression}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OGCExpression-new}{\code{OGCExpression$new()}}
\item \href{#method-OGCExpression-setExprVersion}{\code{OGCExpression$setExprVersion()}}
\item \href{#method-OGCExpression-getExprVersion}{\code{OGCExpression$getExprVersion()}}
\item \href{#method-OGCExpression-clone}{\code{OGCExpression$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="ERROR"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-ERROR'><code>ows4R::OGCAbstractObject$ERROR()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="INFO"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-INFO'><code>ows4R::OGCAbstractObject$INFO()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="WARN"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-WARN'><code>ows4R::OGCAbstractObject$WARN()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="encode"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-encode'><code>ows4R::OGCAbstractObject$encode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClass"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getClass'><code>ows4R::OGCAbstractObject$getClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClassName"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getClassName'><code>ows4R::OGCAbstractObject$getClassName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getNamespaceDefinition"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-getNamespaceDefinition'><code>ows4R::OGCAbstractObject$getNamespaceDefinition()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="isFieldInheritedFrom"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-isFieldInheritedFrom'><code>ows4R::OGCAbstractObject$isFieldInheritedFrom()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="logger"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-logger'><code>ows4R::OGCAbstractObject$logger()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="print"><a href='../../ows4R/html/OGCAbstractObject.html#method-OGCAbstractObject-print'><code>ows4R::OGCAbstractObject$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OGCExpression-new"></a>}}
\if{latex}{\out{\hypertarget{method-OGCExpression-new}{}}}
\subsection{Method \code{new()}}{
Initializes an object of class \link{OGCExpression}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OGCExpression$new(
  element,
  namespacePrefix,
  attrs = NULL,
  defaults = NULL,
  exprVersion = "1.1.0"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{element}}{element name}

\item{\code{namespacePrefix}}{XML namespace prefix}

\item{\code{attrs}}{attributes}

\item{\code{defaults}}{default values}

\item{\code{exprVersion}}{OGC version for the expression}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OGCExpression-setExprVersion"></a>}}
\if{latex}{\out{\hypertarget{method-OGCExpression-setExprVersion}{}}}
\subsection{Method \code{setExprVersion()}}{
Sets expression version. The methods will control proper XML namespace prefix setting
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OGCExpression$setExprVersion(exprVersion)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exprVersion}}{OGC expression version}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OGCExpression-getExprVersion"></a>}}
\if{latex}{\out{\hypertarget{method-OGCExpression-getExprVersion}{}}}
\subsection{Method \code{getExprVersion()}}{
Gets expression version
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OGCExpression$getExprVersion()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
object of class \code{character}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OGCExpression-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OGCExpression-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OGCExpression$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
